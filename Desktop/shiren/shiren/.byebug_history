exit
hands_and_scores[0][0]
hands_and_scores[0]
hands_and_scores.each do |a|
hands_and_scores[0[0]]
hands_and_scores[0]
hands_and_scores.each[0]
hands_and_scores.each[0[0]]
hands_and_scores
exit
hands_and_scores{|a,b| expect(service.web_app_judge(a)).to eq(b)}
hands_and_scores{|a,b| expect(service.web_app_judge(a).to eq(b)}
exit
hands_and_scores.each{|a,b| puts exit}
hands_and_scores.each{|a,b| puts b}
hands_and_scores.each{|a,b| puts a}
hands_and_scores
exit
api_response == response.body
exit
response.body.class
api_response.class
response.body
a = JSON.generate(response.body)
a = JSON.generate(reponse.body)
api_response == response.body
api_response
api_request
response.body
response
exit
next
exit
next
exit
next
exit
next
exit
JSON.generate(result)
result.class
result.type
exit
next
result
nextresult
next
cards1.split
next
cards[0]
cards = params["cards"]
params["cards"]
cards
exit
params["cards"]
params["cards]
params
exit
JSON.parse(request)
JSON.stringify(request)
exit
next
request.parse
JSON.parse(request)
request
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
next
exit
a.split
a = cards[0]
cards.split
cards.split()
cards_array
exit
cards.delete
cards.delete("\",[,]")
cards
sophisticated_cards
exit
n
exit
n
exit
next
n
next
n
s
next
exit
next
flash[:notice]
next
cards
next
params
exit
next
exit
params[:card]
cards
cards.card
exit
next
cards
quit
q
exit
next
p
